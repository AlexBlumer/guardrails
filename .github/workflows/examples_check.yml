name: Notebook Execution and Error Check

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:  # This enables manual triggering

jobs:
  setup:
    runs-on: ubuntu-latest
    env:
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2    
    - name: Set up Python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.11.x
    - name: Poetry cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Install dependencies
      run: |
        make full;
        poetry add openai==0.28.1 jupyter nbconvert cohere;
    - name: Check for pypdfium2
      run: poetry run pip show pypdfium2
    - name: Huggingface Hub Login
      run: poetry run huggingface-cli login --token $HUGGINGFACE_API_KEY
    - name: download nltk data
      run: |
        mkdir /tmp/nltk_data;
        poetry run python -m nltk.downloader -d /tmp/nltk_data punkt;
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        path: |
          /tmp/nltk_data
          ./.venv
          ./guardrails
          ~/.cache/pypoetry
  
  execute_notebooks:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        notebook: [ "*.ipynb" ]
    env:
      COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
      NLTK_DATA: /tmp/nltk_data


    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: setup-artifacts
    - name: Use venv
      run: source .venv/bin/activate
    - name: Execute notebooks and check for errors
      run: bash ./.github/workflows/scripts/run_notebooks.sh ${{ matrix.notebook }}

